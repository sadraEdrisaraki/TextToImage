import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.List;

public class Utils {
	
	static int nbrRouge, nbrVert, nbrBleu = 0;
	
	public Utils() {};
	
	
	public static List<Integer> convertStringToRGB(String listeMotsConcatene) {
		List<Integer> listeRGB = new ArrayList<Integer>();
		int[] placeur = new int[3];
		int indicePlaceur = 0;
		
		for(int i = 0 ; i < listeMotsConcatene.length() ; i++) {
			placeur[indicePlaceur] = (int) listeMotsConcatene.charAt(i);
			indicePlaceur++;
			if(indicePlaceur == 3) {
				
				if(placeur[0] > placeur[1] && placeur[0] > placeur[2])nbrRouge++;
				if(placeur[1] > placeur[0] && placeur[1] > placeur[2])nbrVert++;
				if(placeur[2] > placeur[0] && placeur[2] > placeur[1])nbrBleu++;
				
				indicePlaceur = 0;
				placeur[0] = placeur[0]*1000000;
				placeur[1] = placeur[1]*1000;
				
				int rgb = placeur[0]+placeur[1]+placeur[2];
				listeRGB.add(rgb);
				placeur[0] = 0;
				placeur[1] = 0;
				placeur[2] = 0;
			}
		}
		return listeRGB;
	}
	
	private static BufferedImage createImage(int width, int height, List<Integer> listConvertedWord){

	    int imageType = BufferedImage.TYPE_INT_RGB;
	    BufferedImage Image = new BufferedImage(width,height,imageType);

	    for(int i=0 ; i<width ; i++){
	        for(int j=0 ; j<height ; j++){
	        	if(listConvertedWord.size() > i*height+j) {
	        		Image.setRGB(i, j, listConvertedWord.get(i*height+j));
	        	}
	        }
	    }

	    return Image;
	}
	
	

}
