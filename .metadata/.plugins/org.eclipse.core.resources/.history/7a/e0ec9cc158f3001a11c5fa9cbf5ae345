import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

import javax.imageio.ImageIO;

public class main {

	
	

	public static void main(String[] args) {
		
		System.out.println("Debut du logiciel de traduction de texte en image");
		System.out.println("Vérification du fichier texte");
		
		List<String> listeMots = lireTexteToString();
		String listeMotsConcatene = remplacerCaractereSpeciaux(listeMots);
		List<Integer> listeRGB = Utils.convertStringToRGB(listeMotsConcatene);
		int imageSize = (int) Math.ceil(Math.sqrt(listeRGB.size()));
		BufferedImage image = Utils.createImage(imageSize , imageSize , listeRGB);
		Utils.saveImage(image);
		System.out.println("Nombre de pixel rouge = " + Utils.nbrRouge);
		System.out.println("Nombre de pixel vert = " + Utils.nbrVert);
		System.out.println("Nombre de pixel bleu = " + Utils.nbrBleu);
		 

	}
	
	
	
	
	
	
	
	

	private static String remplacerCaractereSpeciaux(List<String> listeMots) {
		
		String replacementTotal = "";
		for(String index : listeMots) {
			String replacement = decompose(index);
			replacementTotal+=replacement;

		}
		replacementTotal = replacementTotal.replaceAll("\\s+","");
		return replacementTotal;
	}
	
	public static String decompose(String s) {
	    return java.text.Normalizer.normalize(s, java.text.Normalizer.Form.NFD).replaceAll("\\p{InCombiningDiacriticalMarks}+","");
	}

	private static List<String> lireTexteToString(){
		
		List<String> listeMots = null;
		try {
			listeMots = Files.readAllLines(Paths.get("texte.txt"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return listeMots;
		
	}
	

}
